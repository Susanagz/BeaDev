// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Model;

namespace Model.Migrations
{
    [DbContext(typeof(BeadevContext))]
    [Migration("20211112124850_KNN")]
    partial class KNN
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Model.ProgrammingIcon", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProgrammingIcons");
                });

            modelBuilder.Entity("Model.ProgrammingLanguage", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("IdIcon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("RegistryDate")
                        .HasColumnType("date");

                    b.Property<decimal?>("SalaryRange")
                        .HasColumnType("money");

                    b.Property<string>("StackDescription")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("IdIcon");

                    b.ToTable("ProgrammingLanguages");
                });

            modelBuilder.Entity("Model.Statistic", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("MonthID")
                        .HasColumnType("int");

                    b.Property<int>("ProgrammLangID")
                        .HasColumnType("int");

                    b.Property<int>("TotalOffers")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("Model.ProgrammingLanguage", b =>
                {
                    b.HasOne("Model.ProgrammingIcon", "IdIconNavigation")
                        .WithMany("ProgrammingLanguages")
                        .HasForeignKey("IdIcon")
                        .HasConstraintName("FK_ProgrammingLanguages_ProgrammingIcons")
                        .IsRequired();

                    b.Navigation("IdIconNavigation");
                });

            modelBuilder.Entity("Model.ProgrammingIcon", b =>
                {
                    b.Navigation("ProgrammingLanguages");
                });
#pragma warning restore 612, 618
        }
    }
}
